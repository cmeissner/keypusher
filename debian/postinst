#!/bin/sh
# postinst script for keypusher
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

createSSHKeys() {
	# This is the system key for keypusher
	file /etc/keypusher/keypusher | grep -q RSA \
		|| /usr/bin/ssh-keygen -q -t rsa -b 2048 -C "keypusher@$HOSTNAME" -N "" -f /etc/keypusher/keypusher > /dev/null 2>&1
}

createExampleFiles() {
	# A useless ssh key. Only the pubkey will left in keypusher
	/usr/bin/ssh-keygen -q -t rsa -b 2048 -C "keypusher-example@$HOSTNAME" -N "" -f /etc/keypusher/userkeys/example \
		&& rm /etc/keypusher/userkeys/example > /dev/null 2>&1
	# add this key to root keychain.
	/bin/cat /etc/keypusher/userkeys/example.pub > /etc/keypusher/users/root > /dev/null 2>&1
	# create empty maps
	touch /etc/keypusher/maps/host.map.d/example.map > /dev/null 2>&1
	touch /etc/keypusher/maps/user.map.d/example.map > /dev/null 2>&1
}

case "$1" in
    configure)
    	createSSHKeys
	createExampleFiles
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
